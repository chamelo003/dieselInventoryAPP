/***************************************************************
*PROCEDMIENTOS ALMACENADOS PARA LA BASE DE COMBUSTIBLE 'DIESEL'*
*				REALIZADOS EL 29/JULIO/2020					   *
***************************************************************/
DELIMITER $$
-- PROCEDIMIENTO PARA AGREGAR UN USUARIO
CREATE PROCEDURE SP_AgUsuario (IN Nombre VARCHAR(50), IN Username VARCHAR(25), IN Pass VARCHAR(256), IN IdUbic INT, Permi char(3))
BEGIN
	INSERT INTO Usuarios (Nombre,Username,Contrasena,IdUbicacion,Permisos) Values (Nombre,Username,Pass,IdUbic,Permi);
END;

-- PROCEDIMIENTO PARA MODIFICARAR UN USUARIO
CREATE PROCEDURE SP_ModUsuario (IN Id INT, IN Nom VARCHAR(50), IN Uname VARCHAR(25), IN Pass VARCHAR(256), IN IdUbic INT)
BEGIN
	UPDATE Usuarios SET
    Nombre = Nom,
    Username = Uname,
    Contrasena = Pass,
    IdUbicacion = IdUbic
    WHERE IdUsuario = Id;
END;

-- PROCEDIMIENTO PARA AGREGAR MARCA DE UN VEHICULO
CREATE PROCEDURE SP_AgMarca (IN Marca VARCHAR(50))
BEGIN
	INSERT INTO Marcas (Marca) Values (Marca);
END;

-- PROCEDIMIENTO PARA AGREGAR TRANSPORTISTAS
CREATE PROCEDURE SP_AgTransportista (IN rtn CHAR(14), IN Nombre VARCHAR(25), IN Apellido VARCHAR(25), IN Observacion TEXT)
BEGIN
	INSERT INTO Transportistas (RTN,Nombre,Apellido,Observacion) Values (Nombre,Username,Pass,IdUbic);
END;

-- PROCEDIMIENTO PARA MODIFICAR TRANSPORTISTAS
CREATE PROCEDURE SP_ModTransportista (IN IdInt INT, IN rtn CHAR(14), IN Nombre VARCHAR(25), IN Apellido VARCHAR(25), IN Obs TEXT)
BEGIN
	UPDATE Transportistas 
    SET RTN = rtn,
    Nombre = Nombre,
    Apellido = Apellido,
    Observacion = Obs
    WHERE IdInterno = IdInt;
END;

-- PROCEDIMIENTO PARA AGREGAR MOTORISTAS
CREATE PROCEDURE SP_AgMotorista (IN Id CHAR(13), IN Nombre VARCHAR(25), IN Apellido VARCAHR(25), IN Obs TEXT, IN RTNTrans CHAR(14))
BEGIN
	INSERT INTO Motoristas (Id,Nombre,Apellido,Observacion,RTNTrans) Values (Id,Nombre,Apellido,Obs,RTNTrans);
END;

-- PROCEDIMIENTO PARA MODIFICAR MOTORISTAS
CREATE PROCEDURE SP_ModMotorista (IN IdIint INT, IN Id CHAR(13), IN Nombre VARCHAR(25), IN Apellido VARCHAR(25), IN Obs TEXT, IN RTNTrans CHAR(14))
BEGIN
	UPDATE Motoristas 
    SET IdMotorista = Id,
    Nombre = Nombre,
    Apellido = Apellido,
    Observacion = Obs,
    RTNTrans = RTNTrans
    WHERE Idinterno = Idint
END;

-- PROCEDIMIENTO PARA AGREGAR QUIENES AUTORIZAN LAS ORDENES
CREATE PROCEDURE SP_AgAutoriza (IN N VARCHAR(50), IN OBS TEXT, IN IDUB INT)
BEGIN
	INSERT INTO Autorizan (Nombre,Observacion,IdUbicacion) VALUES (N,OBS,IDUB);
END

-- PROCEDIMIENTO PARA AGREGAR TEMPORADAS
CREATE PROCEDURE SP_AgTemporada (IN T VARCHAR(20))
BEGIN
	INSERT INTO Temporadas (Temporada) VALUES (T);
END

-- PROCEDIMIENTO PARA AGREGAR TIPOS DE SALIDAS
CREATE PROCEDURE SP_AgTipoSalida (IN TIPO VARCHAR(30))
BEGIN
	INSERT INTO TiposSalidas (TipoSalida) VALUES (TIPO);
END

-- PROCEDIMIENTO PARA CREAR CIERRES
CREATE PROCEDURE SP_AgCierre (IN F DATE, IN IdUbi INT, IN ci FLOAT, IN cf FLOAT, IN obs TEXT)
BEGIN
	INSERT INTO Cierres (Fecha,IdUbicacion,CantInicial,CantFinal,Observacion) VALUES (F,IdUbi,ci,cf,obs);
END;

-- PROCEDIMIENTO PARA MODIFICAR EL CIERRE. ESTE SOLO VA A CAMBIAR LA CANTIDAD FINAL DE COMBUSTIBLE Y MARCA EL D√çA COMO CERRADO
CREATE PROCEDURE SP_ModCierre (IN F DATE, IN IDUBI INT, IN CF, IN C BOOL)
BEGIN
	UPDATE CIERRES SET CantFinal=CF, Cerrado = C WHERE Fecha = F AND IdUbicacion = IDUBI;
END;

-- PROCEDIMIENTO PARA CREAR UNA ENTRADA
CREATE PROCEDURE SP_AgEntrada (IN IdUbi INT, IN IdMot INT, IN Cant FLOAT, IN OBS TEXT, IN HL TIME, IN Ex FLOAT, IN F DATE)
BEGIN
	INSERT INTO Entradas(IdUbicacion,IdMotorista,Cantidad,Observacion,HoraLlegada,Existecia,Fecha) VALUES (IdUbi,IdMot,Cant,Obs,HL,Ex,F);
END

-- PROCEDIMIENTO PARA MODIFICAR UNA ENTRADA
CREATE PROCEDURE SP_ModEntrada (IN Id INT,IN IdUbi INT, IN IdMot INT, IN Cant FLOAT, IN OBS TEXT, IN HL TIME, IN Ex FLOAT, IN F DATE)
BEGIN
	UPDATE Entradas
    SET IdUbicacion=IdUbi, 
    IdMotorista=IdMot, 
    Cantidad=Cant, 
    Observacion=Obs, 
    HoraLlegada=HL, 
    Existecia=Ex,
    Fecha=F
    WHERE IdEntrada = Id AND IdUbicacion = IdUbi AND Fecha = F;
END;

-- PROCEDIMIENTO PARA CREAR TIPOS DE VEHICULOS
CREATE PROCEDURE SP_AgTipoVehiculo(IN T VARCHAR(50))
BEGIN
	INSERT INTO TiposVehiculos (Tipo) VALUES (T);
END;

-- PROCEDIMIENTO PARA MODIFICAR TIPOS DE VEHICULOS
CREATE PROCEDURE SP_ModTipoVehiculo(IN Id INT, IN T VARCHAR(50))
BEGIN
	UPDATE TiposVehiculos SET Tipo=T WHERE IdTipo=Id;
END;

-- PROCEDIMIENTO PARA AGREGAR VEHICULOS
CREATE PROCEDURE SP_AgVehiculo (IN PLACA CHAR(7), IN IDM INT, IN IDT INT, IN OBS TEXT, IN IDMOT CHAR(13))
BEGIN
	INSERT INTO Vehiculos (Placa,IdMarca,IdTipo,Observacion,IdMotorista)V_Ordenes
    VALUES (PLACA,IDM,IDT,OBS,IDMOT);
END;

-- PROCEDIMIENTO PARA MODIFICAR VEHICULOS
CREATE PROCEDURE SP_ModVehiculo (IN PLACA CHAR(7), IN IDM INT, IN IDT CHAR(13), IN OBS TEXT, IN IDMOT CHAR(13), IN IDINT INT)
BEGIN
	UPDATE Vehiculos SET
		Placa = PLACA,
        IdMarca = IDM,
        IdTipo = IDT,
        Observacion = OBS,
        IdMotorista = IDMOT
	WHERE IdInterno = IDINT;
END

-- PROCEDIMIENTO PARA AGREGAR UN BOMBERO
CREATE PROCEDURE SP_AgBombero (IN N VARCHAR(25), IN A VARCHAR(25), IN O TEXT, IN IDB INT)
BEGIN
	INSERT INTO Bomberos (Nombre, Apellido, Observacion, IdBomba) VALUES (N,A,O,IDB);
END;

-- PROCEDIMIENTO PARA AGREGAR UNA BOMBA
CREATE PROCEDURE SP_AgBomba (IN B VARCHAR(25), IN IDE INT, IN IDUB INT)
BEGIN
	INSERT INTO Bombas (Bomba, IdEmpresa, IdUbicacion) VALUES (B,IDE,IUB);
END;

-- PROCEDIMIENTO PARA AGREGAR UNA UBICACION
CREATE PROCEDURE SP_AgUbicacion (IN U VARCHAR(35))
BEGIN
	INSERT INTO Ubicaciones (LugarUbicacion) VALUES (U);
END;

-- PROCEDIMIENTO PARA AGREGAR UNA ORDEN
CREATE PROCEDURE SP_AgOrden (IN IDU INT, IN F DATE, IN IDA INT, IN IDB INT, IN P CHAR(7), IN IDT INT, IN B VARCHAR(12),IN C CHAR(11), IN CH VARCHAR(10), IN PL VARCHAR(15), IN IDTS INT, IN IDBO INT, IN G FLOAT,IN DES TEXT, IN KMT INT, IN IMP BOOL, IN ANUL BOOL, IN CXC BOOL, IN EX FLOAT, IN R BOOL)
BEGIN
	INSERT INTO Ordenes (IdUbicacion,Fecha,IdAutoriza,IdBomba,Placa,IdTemporada,Boleta,Contenedor,Chasis,Planta,IdTipoSalida,
	IdBombero,Galones,Descripcion,Kilometraje,Impresa,Anulada,CxC,Existencia,Reimpresion)
    VALUES (IDU,F,IDA,P,IDT,B,C,CH,PL,IDTS,IDBO,G,DES,KMT,IMP,ANUL,CXC,EX,R);
END

-- PROCEDIMIENTO PARA MODIFICAR UNA ORDEN
CREATE PROCEDURE SP_ModOrden(IN IDO INT, IN IDU INT, IN F DATE, IN IDA INT, IN IDB INT, IN P CHAR(7), IN IDT INT, IN B VARCHAR(12),IN C CHAR(11), IN CH VARCHAR(10), IN PL VARCHAR(15), IN IDTS INT, IN IDBO INT, IN G FLOAT,IN DES TEXT, IN KMT INT, IN IMP BOOL, IN ANUL BOOL, IN CXC BOOL, IN EX FLOAT, IN R BOOL,IN Galanul FLOAT)
BEGIN
	UPDATE Ordenes SET

-- PROCEDIMIENTO PARA OBTENER EL CORRELATIVO DE LAS ORDENES
set delimiter ##
CREATE PROCEDURE GetCorrelativo(IN ubi int, OUT id int)
BEGIN
DECLARE idOrd INT;
SELECT max(IdOrden) INTO idOrd FROM Ordenes WHERE IdUbicacion = ubi;
IF idOrd = 0 THEN
	SET idOrd = 1;
ELSE
	set idOrd = idOrd + 1;
END IF;
SET id = idOrd;
END